# Random walk

Creating random walk in Z Plane

preliminaries
```{r}
library(ggplot2)
```

## Basic implementation

Function for Random Walk
k: Initial state n: Number of steps

```{r}
options <- list(
    c(0, 0),
    c(1, 0),
    c(0, 1),
    c(-1, 0),
    c(0, -1),
    c(1, 1),
    c(-1, -1),
    c(-1, 1),
    c(1, -1)
)

plot(0, 0, xlim = c(-150, 150), ylim = c(-150, 150), col = "red", pch = 19)

simulate_random_walk <- function(k, n) {
    state <- k
    counter <- 0
    color <- "blue"

    for (i in 1:n) {
        if (i == 0.2 * n) {
            color <- "green"
        }
        if (i == 0.4 * n) {
            color <- "yellow"
        }
        if (i == 0.6 * n) {
            color <- "orange"
        }
        if (i == 0.8 * n) {
            color <- "purple"
        }

        move <- sample(options, 1)[[1]]
        state_old <- state
        state <- state + move
        lines(c(state[1], state_old[1]), c(state[2], state_old[2]), col = color)

        if (state[1] == 0 & state[2] == 0) {
            counter <- counter + 1
        }
    }
    cat("Walked back home", counter, "times")
}
```

Call the Function, and adjust parameters

```{r}
k <- c(0, 0)
n <- 10000

simulate_random_walk(k, n)
```

There is also a counter that will count how often the random walk returns to the origin.


```{r}


```
```{r}


```
```{r}


```


```{r}


```


```{r}


```


```{r}


```